name: build-push-deploy

on:
  push:
    branches: [ main ]

concurrency:
  group: prod-deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (server/)
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          tags: |
            ghcr.io/chrishorler/sakila-server:latest
            ghcr.io/chrishorler/sakila-server:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/chrishorler/sakila-server:buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/chrishorler/sakila-server:buildcache

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          script_stop: true
          envs: PROD_DIR,GHCR_USER,GHCR_PAT
          script: |
            set -euo pipefail
            cd "$PROD_DIR"

            if [ -n "${GHCR_PAT:-}" ]; then
              echo "$GHCR_PAT" | docker login ghcr.io -u "${GHCR_USER:-${USER:-github}}" --password-stdin
            fi

            docker compose --env-file ./.env.production -f compose.prod.yml up -d --remove-orphans

            timeout 60s bash -c 'until docker inspect -f "{{.State.Health.Status}}" sakila-prod-server-1 2>/dev/null | grep -q healthy; do sleep 2; done' || true

            docker image prune -f --filter=until=168h || true

        env:
          PROD_DIR: ${{ secrets.PROD_DIR }}
          GHCR_USER: ${{ github.actor }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}

  smoke:
    name: Post-deploy smoke tests (Cypress vs live URL)
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout (for Cypress specs)
        uses: actions/checkout@v4

      - name: Wait for site to respond
        run: |
          URL="${{ secrets.PROD_URL }}"
          echo "Waiting for $URL ..."
          for i in {1..40}; do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            if [ "$CODE" -ge 200 ] && [ "$CODE" -lt 400 ]; then
              echo "Site is up with HTTP $CODE"
              exit 0
            fi
            sleep 3
          done
          echo "Timed out waiting for $URL"
          exit 1

      - name: Run Cypress smoke tests against PROD
        uses: cypress-io/github-action@v6
        with:
          working-directory: server
          install-command: npm ci
          browser: chrome
          spec: |
            cypress/e2e/ui.cy.js
            cypress/e2e/more-ui.cy.js
          config: baseUrl=${{ secrets.PROD_URL }}
          wait-on: ${{ secrets.PROD_URL }}
          wait-on-timeout: 120
